{
  "openapi": "3.0.0",
  "info": {
    "title": "kauppAPI",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "https://kauppa-api.herokuapp.com"
    }
  ],
  "paths": {
    "/login": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Log in",
        "description": "Endpoint is used to login with username and password",
        "operationId": "get-login",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Register",
        "description": "Register a new user",
        "operationId": "post-register",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/user"
              },
              "examples": {}
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        }
      }
    },
    "/postings/{id}": {
      "get": {
        "tags": [
          "Posts"
        ],
        "summary": "Get specificed posting",
        "description": "Endpoint is used to get specified postings",
        "operationId": "get-posting",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/post"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "Posts"
        ],
        "summary": "Edit specificed posting",
        "description": "Endpoint is used to edit specified posting",
        "operationId": "put-postings-id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasic": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Posts"
        ],
        "summary": "Delete specified posting",
        "description": "Endpoint is used to delete specified posting",
        "operationId": "delete-postings",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/postings/search": {
      "get": {
        "tags": [
          "Posts"
        ],
        "summary": "Search postings",
        "description": "Search postings based on category. location and date.",
        "operationId": "search-postings",
        "parameters": [
          {
            "name": "category",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "location",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "ISO 8601",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/postings": {
      "get": {
        "tags": [
          "Posts"
        ],
        "summary": "Get all postings",
        "description": "Get all postings",
        "operationId": "get-postings",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/post"
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "id": 0,
                      "createdBy": 0,
                      "title": "string",
                      "price": "string",
                      "location": "string",
                      "description": "string",
                      "category": "string",
                      "images": [
                        {
                          "url": "string"
                        }
                      ],
                      "delivery": true,
                      "date": "string",
                      "contact": {
                        "name": "string",
                        "email": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Posts"
        ],
        "summary": "Create new posting",
        "description": "Create a new posting",
        "operationId": "post-postings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/post"
              },
              "examples": {
                "example-1": {
                  "value": {
                    "id": 0,
                    "createdBy": 0,
                    "title": "string",
                    "price": "string",
                    "location": "string",
                    "description": "string",
                    "category": "string",
                    "images": [
                      {
                        "url": "string"
                      }
                    ],
                    "delivery": true,
                    "date": "string",
                    "contact": {
                      "name": "string",
                      "email": "string"
                    }
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/post"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/postings/{id}/upload": {
      "post": {
        "tags": [
          "Posts"
        ],
        "summary": "Upload images to post",
        "operationId": "post-postings-id-upload",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Image key is file",
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "image": {
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "HTTPBasic": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "user": {
        "title": "user",
        "required": [
          "password",
          "username"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        },
        "description": "User model",
        "x-examples": {
          "example-1": {
            "id": 1234,
            "username": "erkkiesim",
            "password": "Password123",
            "email": "erkki.esimerkki@email.com"
          }
        }
      },
      "post": {
        "title": "posting",
        "required": [
          "category",
          "delivery",
          "description",
          "location",
          "price",
          "title"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "createdBy": {
            "type": "number"
          },
          "title": {
            "type": "string"
          },
          "price": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "images": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/image"
            }
          },
          "delivery": {
            "type": "boolean"
          },
          "date": {
            "type": "string",
            "description": "ISO 8601"
          },
          "contact": {
            "$ref": "#/components/schemas/contact"
          }
        },
        "description": "User made listing",
        "x-examples": {
          "example-1": {
            "id": 12434,
            "createdBy": 1,
            "title": "Kello",
            "price": "48000",
            "location": "Oulu",
            "description": "Vitun hieno kello",
            "category": "Kellot",
            "images": [
              {
                "url": "string"
              }
            ],
            "delivery": true,
            "date": "2020-08-24",
            "contact": {
              "name": "Erkki Esimerkki",
              "email": "erkki.esimerkki@email.com"
            }
          }
        }
      },
      "contact": {
        "title": "contact",
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        },
        "x-examples": {
          "example-1": {
            "name": "Erkki Esimerkki",
            "email": "erkki.esimerkki@email.com"
          }
        }
      },
      "image": {
        "title": "image",
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          }
        }
      },
      "error": {
        "title": "ErrorResponse",
        "required": [
          "errorMessage"
        ],
        "type": "object",
        "properties": {
          "errorMessage": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "HTTPBasic": {
        "type": "http",
        "scheme": "basic"
      }
    }
  }
}